<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- BoneCP configuration -->
    <bean id="jdcJdbcPooledDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="${jdc.jdbc.url}" />
        <property name="username" value="${jdc.jdbc.username}" />
        <property name="password" value="${jdc.jdbc.password}" />

        <property name="poolName" value="jdc" />
        <property name="partitionCount" value="1" />
        <property name="minConnectionsPerPartition" value="2" />
        <property name="maxConnectionsPerPartition" value="10" />
        <property name="acquireIncrement" value="2" />
        <property name="connectionTimeoutInMs" value="20000" />

        <!-- MySQL driver "Connector/J" properties -->
        <property name="driverProperties">
            <props>
                <prop key="socketTimeout">20000</prop>
            </props>
        </property>
    </bean>

    <!-- Tomcat 7 pooled datasource
    <bean id="_jdcJdbcPooledDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${jdc.jdbc.url}" />
        <property name="username" value="${jdc.jdbc.username}" />
        <property name="password" value="${jdc.jdbc.password}" />
    </bean>
    -->

    <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
    <bean id="jdcJdbcDataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref local="jdcJdbcPooledDataSource" />
        </property>
    </bean>

    <bean id="jdcHibernateSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="mappingResources">
            <list>
                <value>ch/windmobile/server/jdc/Data.hbm.xml</value>
                <value>ch/windmobile/server/jdc/Station.hbm.xml</value>
                <value>ch/windmobile/server/jdc/Sensor.hbm.xml</value>
            </list>
        </property>
        <property name="dataSource" ref="jdcJdbcDataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>

                <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ch/windmobile/server/jdc/ehcache.xml</prop>

                <!-- Does not work: instead change the logger level "org.hibernate.SQL.level = FINE"
                <prop key="hibernate.show_sql">false</prop> -->

                <prop key="hibernate.generate_statistics">true</prop>
            </props>
        </property>
    </bean>

    <bean id="jdcDataSource" class="ch.windmobile.server.jdc.JdcDataSource">
        <constructor-arg name="sessionFactory" ref="jdcHibernateSessionFactory" />
    </bean>

    <bean id="jdcHibernateStatisticsBean" class="org.hibernate.jmx.StatisticsService">
        <property name="statisticsEnabled">
            <value>true</value>
        </property>
        <property name="sessionFactory">
            <ref local="jdcHibernateSessionFactory" />
        </property>
    </bean>
</beans>